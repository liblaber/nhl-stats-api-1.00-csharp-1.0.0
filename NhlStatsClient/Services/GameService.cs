// This file was generated by liblab | https://liblab.com/

using System.Net.Http.Json;
using NhlStatsClient.Http;
using NhlStatsClient.Http.Exceptions;
using NhlStatsClient.Http.Extensions;
using NhlStatsClient.Http.Serialization;

namespace NhlStatsClient.Services;

public class GameService : BaseService
{
    internal GameService(HttpClient httpClient)
        : base(httpClient) { }

    /// <summary>Retrieve game information.</summary>
    /// <param name="lang">Language code</param>
    public async Task<object> GetGameInformationAsync(
        string lang,
        CancellationToken cancellationToken = default
    )
    {
        ArgumentNullException.ThrowIfNull(lang, nameof(lang));

        var request = new RequestBuilder(HttpMethod.Get, "{lang}/game")
            .SetPathParameter("lang", lang)
            .Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);

        return await response
                .EnsureSuccessfulResponse()
                .Content.ReadFromJsonAsync<object>(_jsonSerializerOptions, cancellationToken)
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }

    /// <summary>Retrieve metadata for game.</summary>
    /// <param name="lang">Language code</param>
    public async Task<object> GetGameMetadataAsync(
        string lang,
        CancellationToken cancellationToken = default
    )
    {
        ArgumentNullException.ThrowIfNull(lang, nameof(lang));

        var request = new RequestBuilder(HttpMethod.Get, "{lang}/game/meta")
            .SetPathParameter("lang", lang)
            .Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);

        return await response
                .EnsureSuccessfulResponse()
                .Content.ReadFromJsonAsync<object>(_jsonSerializerOptions, cancellationToken)
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }
}
